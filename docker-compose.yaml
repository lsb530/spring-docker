version: '3'
services:
  mysql-container:
    image: mysql:latest
    platform: linux/arm64
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: example_db
    ports:
      - "3306:3306"
    volumes:
      - ./script/init.sql:/docker-entrypoint-initdb.d/init.sql

  backend:
    build: .
    ports:
      - "8080:8080"
    depends_on:
      - mysql-container
    command:
      - bash
      - -c
      - |
        ./wait-for-it.sh mysql-container:3306 -s -t 0
        java -jar app.jar

  frontend:
#    build: .
    restart: always
    image: nginx
    ports:
      - "4000:80"
#      - "80:80"
    volumes:
#      - ./proxy.conf:/etc/nginx/conf.d/default.conf
#      - ./wg.conf:/etc/nginx/conf.d/wg.conf

      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./frontend/dist:/usr/share/nginx/html  # 이 부분은 React 프로젝트의 빌드 결과 디렉터리가 들어가야 합니다.

#      - ./nginx.conf:/etc/nginx/nginx.conf
#      - ./frontend/dist:/usr/share/nginx/html  # 이 부분은 React 프로젝트의 빌드 결과 디렉터리가 들어가야 합니다.
