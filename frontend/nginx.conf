# worker_processes  1;
# error_log  /var/log/nginx/error.log warn;
# pid        /var/run/nginx.pid;

# events {
#   worker_connections  1024;
# }

# http {
#     include       /etc/nginx/mime.types;
#       default_type  application/octet-stream;
#       log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
#                         '$status $body_bytes_sent "$http_referer" '
#                         '"$http_user_agent" "$http_x_forwarded_for"';
#       access_log  /var/log/nginx/access.log  main;
#       sendfile        on;
#
#       server {
#           listen       80;
#           server_name  localhost;
#           location / {
# #             root   /app;
#             root /usr/share/nginx/html;
#             index  index.html;
#             try_files $uri $uri/ /index.html;
#           }
#           location ^~ /api {
#               proxy_pass http://backend:8080; # 'localhost' 대신에 docker-compose의 서비스 이름인 'backend'를 사용합니다.
#               proxy_set_header Host $host;
#               proxy_set_header X-Real-IP $remote_addr;
#               proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#           }
#           error_page   500 502 503 504  /50x.html;
#           location = /50x.html {
#             root   /usr/share/nginx/html;
#           }
#         }
# }


server {
    listen 80;

    location / {
        root /usr/share/nginx/html;
        index index.html;
#         try_files $uri $uri/ /index.html =403; # 요청 경로가 /와 /api를 제외한 모든 경로일 경우 403 Forbidden 응답을 내립니다.
#         try_files $uri $uri/ /index.html;

#         add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
#         expires off;
#         etag off;
    }

    location ^~ /api {
        proxy_pass http://backend:8080; # 'localhost' 대신에 docker-compose의 서비스 이름인 'backend'를 사용합니다.
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

#         proxy_pass http://localhost:8080;
#
#         # CORS 헤더 설정
#         add_header Access-Control-Allow-Origin "*";
#         add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
#         add_header Access-Control-Allow-Headers "Content-Type, Authorization";

#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

#     location /cors {
#         add_header 'Content-Type' 'text/plain';
#         add_header 'Access-Control-Allow-Origin' 'http://wrong-origin.com';
#         return 200 'This response will also trigger a CORS error.\n';
#     }
#
#     location ~ ^/.+  {
#         return 403;
#     }

#     error_page   500 502 503 504  /50x.html;
#     location = /50x.html {
#       root   /usr/share/nginx/html;
#     }
}
